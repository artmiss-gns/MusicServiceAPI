"""Init migration

Revision ID: eb2514cb4d18
Revises: 
Create Date: 2023-11-17 03:05:23.331475

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb2514cb4d18'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Album',
    sa.Column('album_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('album_id')
    )
    op.create_table('Artist',
    sa.Column('artist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('artist_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Genre',
    sa.Column('genre_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('genre_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('genre_id'),
    sa.UniqueConstraint('genre_name')
    )
    op.create_table('Subscriber',
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('username'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Album_artist',
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['Album.album_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.artist_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('album_id', 'artist_id')
    )
    op.create_table('Artist_genre',
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.artist_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['genre_id'], ['Genre.genre_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('artist_id', 'genre_id')
    )
    op.create_table('Artist_registration',
    sa.Column('artist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.artist_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('artist_id', 'username'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Playlist',
    sa.Column('playlist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['Subscriber.username'], ),
    sa.PrimaryKeyConstraint('playlist_id')
    )
    op.create_table('Song',
    sa.Column('song_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['Album.album_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('song_id')
    )
    op.create_table('Likes',
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['Song.song_id'], ),
    sa.ForeignKeyConstraint(['username'], ['Subscriber.username'], ),
    sa.PrimaryKeyConstraint('username', 'song_id')
    )
    op.create_table('Playlist_song',
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['Playlist.playlist_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['song_id'], ['Song.song_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('playlist_id', 'song_id')
    )
    op.create_table('Song_artist',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.artist_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['song_id'], ['Song.song_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('song_id', 'artist_id')
    )
    op.create_table('Song_genre',
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['Genre.genre_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['song_id'], ['Song.song_id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('song_id', 'genre_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Song_genre')
    op.drop_table('Song_artist')
    op.drop_table('Playlist_song')
    op.drop_table('Likes')
    op.drop_table('Song')
    op.drop_table('Playlist')
    op.drop_table('Artist_registration')
    op.drop_table('Artist_genre')
    op.drop_table('Album_artist')
    op.drop_table('Subscriber')
    op.drop_table('Genre')
    op.drop_table('Artist')
    op.drop_table('Album')
    # ### end Alembic commands ###
